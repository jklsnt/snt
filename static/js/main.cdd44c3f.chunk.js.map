{"version":3,"sources":["util.js","semantics.js","components/Square.jsx","components/SquareBatch.jsx","components/SquaresDisplay.jsx","components/TaskSquare.jsx","components/TaskSquareDay.jsx","squareReducer.js","App.js","serviceWorker.js","index.js"],"names":["zip","args","map","_","i","a","completion","countd","maxima","reduce","c","m","Math","min","length","Square","counts1","opacity","className","style","backgroundColor","border","SquareBatch","label","counts","start_day","key","day_id","SquaresDisplay","props","console","assert","squares_data","modified_seq","Array","ROW_WIDTH","Date","getDay","fill","concat","idx","arr","push","row","DateTime","now","minus","weeks","days","startOf","toFormat","TaskSquare","name","current","maximum","increment","decrement","colors","onClick","onContextMenu","minWidth","minHeight","TaskSquareDay","dispatch","marginTop","maxWidth","attrs","action","habit_id","e","preventDefault","INITIAL_STATE","state","update","$set","max","Error","JSON","stringify","App","useReducer","squareReducer","squares","sq_dispatch","completions","iterable","predicate","mapfn","x","ret","k","mapUntil","slice","streak_text","useEffect","document","title","borderRadius","marginBottom","fontSize","lineHeight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cdd44c3f.chunk.js","sourcesContent":["export const zip = (...args) => args[0].map((_, i) => args.map(a => a[i]));\nexport const mapUntil = (iterable, predicate, mapfn=x => x) => {\n    const ret = [];\n    for (let k of iterable)\n        if (!predicate(k)) break;\n        else ret.push(mapfn(k));\n    return ret;\n}\n\n","import { zip } from './util.js'\n\nexport const completion = (countd, maxima) => zip(countd, maxima)\n    .reduce((a, [c, m]) => a + Math.min(1, c/m), 0) / countd.length\n","import React from 'react';\nimport { completion } from '../semantics';\n\nexport default function Square({ counts1, maxima }) {\n    const opacity = completion(counts1, maxima);\n\n    return <div\n        className=\"w-12 h-12 m-1 rounded-md\"\n        style={{\n            backgroundColor: `rgba(29, 88, 216, ${opacity})`,\n            border: opacity >= 1 ? '2px solid white' : 'none',\n        }}\n    ></div>\n}\n\n","import React from 'react';\nimport Square from './Square.jsx';\n\nexport default function SquareBatch({ label, counts, maxima, start_day }) {\n    return <div className=\"flex flex-row-reverse justify-center flex-grow w-full h-12\">\n        {counts.map((counts, i) => <Square\n            key={i}\n            counts1={counts}\n            day_id={start_day + i}\n            maxima={maxima}\n        ></Square>)}\n        {label ? <span className=\"inline-block h-10 p-3 font-mono text-right text-gray-600 align-middle justify-right align-center\">{label}</span> : <></>}\n    </div>\n}\n","import React from 'react';\nimport SquareBatch from './SquareBatch.jsx';\nimport { DateTime } from 'luxon';\n\nexport default function SquaresDisplay(props) {\n    console.assert(props.squares_data.counts.length > 0);\n\n    const maxima = props.squares_data.maxima;\n\n    const ROW_WIDTH = 7;\n\n    // spaghet ahead: bunching iterators\n    let modified_seq = Array(ROW_WIDTH-1- new Date().getDay())\n        .fill(props.squares_data.maxima.map(_ => 0))\n        .concat(props.squares_data.counts);\n    const squares_data = [];\n    let idx = 0;\n    while (idx < modified_seq.length) {\n        let arr = [];\n        for (let i=0; i<ROW_WIDTH; i++) {\n            if (idx + i < modified_seq.length) \n                arr.push(modified_seq[idx + i]);\n        }\n        squares_data.push(arr)\n        idx += ROW_WIDTH;\n    }\n    return <div className=\"flex flex-wrap inline-block p-4 m-auto rounded-lg w-shrink space-around bg-grey-700 space-y-2\">\n        {squares_data.map((row, i) => <SquareBatch\n            counts={row}\n            start_day={i*ROW_WIDTH}\n            maxima={maxima}\n            label={DateTime.now().minus({weeks: i, days: -1}).startOf('week').minus({days: 1}).toFormat('MMM dd')} key={i}\n        />)}\n        </div>\n}\n\n","import React from 'react';\n\nexport default function TaskSquare({ name, current, maximum, increment, decrement, colors }) {\n    return <button\n        onClick={increment}\n        onContextMenu={decrement}\n        className=\"m-5 font-bold text-center text-gray-300 rounded-lg\"\n        style={{\n            minWidth: 8+\"rem\",\n\t\t\tminHeight: 7.3+\"rem\",\n\t\t\tbackgroundColor: \"rgba(\" + colors[0] + \",\"+colors[1]+\",\" + colors[2] + ',' + (0.1 + current / maximum * 0.9) + \")\"}}\n    >\n       <div className=\"mt-1 font-extrabold\">{name}</div>\n       <div className=\"mt-2 font-mono text-4xl\">{`${current}/${maximum}`}</div>\n   </button>\n}\n\n","import React from 'react';\nimport TaskSquare from './TaskSquare'\n\nimport { zip } from '../util';\n\nexport default function TaskSquareDay({ counts1, maxima, dispatch }) {\n    const buttons = [\n        {'name': \"Brush Teeth\", 'colors': [37, 99, 235]},\n        {'name': \"Burrie Body\", 'colors': [218, 72, 5]},\n        {'name': \"Meditate\",    'colors': [134, 35, 171]},\n    ]\n    return <div className=\"flex flex-wrap items-baseline w-5/6 px-0 py-0 m-auto bg-gray-800 rounded-2xl\" style={{marginTop: -20+\"px\", maxWidth: 507+'px'}}>\n        { zip(buttons, counts1, maxima).map(([ attrs, c, m ], i) => <TaskSquare\n            name={attrs['name']}\n            current={c}\n            maximum={m}\n            increment={(_) => { dispatch({ action: 'inc', day_id: 0, habit_id: i }) }}\n            decrement={(e) => { dispatch({ action: 'dec', day_id: 0, habit_id: i });\n                                e.preventDefault(); }}\n            colors={attrs['colors']}\n            key={i}\n        />) }\n\t   </div>\n}\n    \n","import update from \"react-addons-update\";    // https://scriptverse.academy/tutorials/reactjs-redux-reducer-update-array.html\n\nconst INITIAL_STATE = {\n    counts: [],\n    maxima: [],\n}\nexport default function (state=INITIAL_STATE, { action, day_id, habit_id }) {\n    switch (action) {\n        case 'inc':\n            return update(state, {\n                counts: {\n                    [day_id]: {\n                        [habit_id]: {\n                            $set: state.counts[day_id][habit_id] + 1,\n                        }\n                    }\n                }\n            });\n        case 'dec':\n            return update(state, {\n                counts: {\n                    [day_id]: {\n                        [habit_id]: {\n                            $set: Math.max(state.counts[day_id][habit_id] - 1, 0),\n                        }\n                    }\n                }\n            });\n        case 'inc_wrap':\n            return update(state, {\n                counts: {\n                    [day_id]: {\n                        [habit_id]: {\n                            $set: (state.counts[day_id][habit_id] + 1) % (state.maxima[habit_id] + 1),\n                        }\n                    }\n                }\n            });\n        case 'dec_wrap':\n            return update(state, {\n                counts: {\n                    [day_id]: {\n                        [habit_id]: {\n                            $set: (state.counts[day_id][habit_id] + state.maxima[habit_id]) % (state.maxima[habit_id] + 1),\n                        }\n                    }\n                }\n            });\n        default:\n            throw new Error(`SquareReducer recieved unknown state ${JSON.stringify(state)}`);\n    }\n}\n\n","import React, { useEffect, useReducer } from 'react';\nimport SquaresDisplay from './components/SquaresDisplay';\nimport TaskSquareDay from './components/TaskSquareDay';\n\nimport squareReducer from './squareReducer';\nimport { completion } from './semantics';\nimport { mapUntil } from './util';\n\n//// https://stackoverflow.com/a/7765814/10372825\n// Date.prototype.getWeek = function() {\n//    var onejan = new Date(this.getFullYear(), 0, 1);\n//    return Math.ceil((((this - onejan) / 86400000) + onejan.getDay() + 1) / 7);\n//}\n\nfunction App() {\n    const og_thing = [[1, 1, 0], [4, 4, 6], [2, 5, 6], [3, 1, 3], [4, 2, 0], [1, 0, 1], [3, 4, 3], [2, 4, 4], [2, 3, 2], [1, 2, 2], [4, 1, 0], [0, 0, 2], [1, 0, 3], [3, 1, 1], [3, 4, 0], [1, 0, 0], [4, 1, 1], [0, 0, 0], [1, 0, 3], [4, 1, 4], [2, 1, 3], [1, 2, 3], [4, 4, 2], [2, 1, 2], [1, 0, 1], [3, 0, 4], [2, 3, 4], [1, 4, 4], [3, 0, 4], [2, 3, 4], [0, 2, 2], [4, 0, 4], [3, 4, 4], [2, 1, 0], [0, 0, 0]];\n\n    const [ squares, sq_dispatch ] = useReducer(squareReducer, { counts: og_thing, maxima: [2, 1, 3] });\n    const completions = mapUntil(squares.counts\n            .slice(1)\n            .map(countd => completion(countd, squares.maxima)),\n        opacity => opacity >= 1)\n        .reduce((a, c) => a + c, 0);\n    const streak_text = `${ completions }${ completion(squares.counts[0], squares.maxima) >= 1? '+' : '' }`\n\n    useEffect(() => { document.title = `${streak_text} days | mogus tracker` }, [streak_text]); // https://dev.to/luispa/how-to-add-a-dynamic-title-on-your-react-app-1l7k\n\n    return (\n        <div className=\"fixed relative flex flex-col w-screen h-screen overflow-x-hidden bg-gray-900 select-none\">\n        <div className=\"mt-2 text-5xl font-extrabold text-center text-gray-500\">MOGUS TRACKER</div>\n        {/*<div className=\"items-center justify-center font-mono text-4xl border-2 max-w-prose\">\n                Hew\n            </div>*/}\n        <div className=\"font-mono text-2xl text-gray-300 h-96 align-center\">\n            <div className=\"w-2/3 py-12 m-auto mt-5 bg-gray-800\" style={{borderRadius: 70 + 'px', maxWidth: 349 + 'px', marginBottom: -20+\"px\", marginTop: -20+\"px\"}}>\n                <p className=\"text-center\">Current Streak</p>\n                <div className=\"content-center justify-center m-auto font-mono font-extrabold text-center text-transparent bg-clip-text bg-gradient-to-tr from-blue-800 to-purple-400 align-center rounded-3xl\" style={{fontSize: 8 + \"em\", lineHeight: 1}}>\n                    {streak_text}\n                </div>\n            </div>\n        </div>\n        <div className=\"w-2 text-xl\"><br/></div>\n        <TaskSquareDay counts1={squares.counts[0]} maxima={squares.maxima} dispatch={sq_dispatch}/>\n        <div className=\"w-full\">\n        <div className=\"w-5/6 pb-12 m-auto mt-8 bg-gray-800 rounded-2xl\" style={{maxWidth: 507+'px'}}>\n            <SquaresDisplay squares_data={squares}></SquaresDisplay>\n        </div>\n        </div>\n    </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}